Index,Query
Q0|CALL apoc.warmup.run();
Q1|MATCH (node:`ns0__clinicaltrials_vocabulary:Drug`) RETURN node.uri as entity, node.ns1__title as propValue;
Q2|MATCH (node:`ns0__clinicaltrials_vocabulary:Clinical-Result`) RETURN node.uri as entity, node.ns1__title as propValue;
Q3|MATCH (node:`ns0__clinicaltrials_vocabulary:Genetic`) RETURN node.uri as entity, node.ns1__title as propValue;
Q4|MATCH (entity:`ns0__clinicaltrials_vocabulary:Clinical-Arm`) WHERE entity.`ns0__clinicaltrials_vocabulary:description` IS NOT NULL UNWIND entity.`ns0__clinicaltrials_vocabulary:description` AS premiere WITH entity, premiere WHERE premiere IS NOT NULL AND toString(premiere) = premiere AND NOT (premiere =~ '[-+]?[0-9]+') RETURN entity.uri AS entity, premiere AS entityValue;
Q5|MATCH (entity:`ns0__clinicaltrials_vocabulary:Event-Count`) WHERE entity.`ns0__clinicaltrials_vocabulary:frequency-threshold` IS NOT NULL UNWIND entity.`ns0__clinicaltrials_vocabulary:frequency-threshold` AS premiere WITH entity, premiere WHERE premiere IS NOT NULL AND toFloat(premiere) IS NOT NULL AND toString(toFloat(premiere)) = toString(premiere) RETURN entity.uri AS entity, toFloat(premiere) AS frequency_threshold;
Q6|MATCH (entity:`ns0__clinicaltrials_vocabulary:Analysis`) WHERE entity.`ns0__clinicaltrials_vocabulary:groups-desc` IS NOT NULL UNWIND entity.`ns0__clinicaltrials_vocabulary:groups-desc` AS premiere WITH entity, premiere WHERE premiere IS NOT NULL AND toString(premiere) = premiere AND NOT (premiere =~ '[-+]?[0-9]+') RETURN entity.uri AS entity, premiere AS entityValue;
Q7|MATCH (node:`ns0__clinicaltrials_vocabulary:Clinical-Study`)-[:`ns0__clinicaltrials_vocabulary:eligibility`]->(tnode) RETURN node.uri as node_iri, tnode.uri as tnode_iri;
Q8|MATCH (node:`ns0__clinicaltrials_vocabulary:Measurement`)-[:`ns0__clinicaltrials_vocabulary:group-id`]->(tnode) RETURN node.uri as node_iri, tnode.uri as tnode_iri;
Q9|MATCH (node:`ns0__clinicaltrials_vocabulary:Eligibility`)-[:`ns0__clinicaltrials_vocabulary:inclusion-criteria`]->(tnode) RETURN node.uri as node_iri, tnode.uri as tnode_iri;
Q10|MATCH (resource:`ns0__clinicaltrials_vocabulary:Resource`)-[:`ns0__clinicaltrials_vocabulary:group-id`]->(group) RETURN resource.uri AS resource_uri, group.uri AS group_id UNION ALL MATCH (resource:`ns0__clinicaltrials_vocabulary:Resource`) UNWIND resource.`ns0__clinicaltrials_vocabulary:group-id` AS group_id RETURN resource.uri AS resource_uri, group_id;
Q11|MATCH (resource:`ns0__clinicaltrials_vocabulary:Resource`)-[:`ns0__clinicaltrials_vocabulary:measure`]->(measure) RETURN resource.uri AS resource_uri, measure.uri AS measure_id UNION ALL MATCH (resource:`ns0__clinicaltrials_vocabulary:Resource`) UNWIND resource.`ns0__clinicaltrials_vocabulary:measure` AS measure_id RETURN resource.uri AS resource_uri, measure_id;
Q12|MATCH (resource:`ns0__clinicaltrials_vocabulary:Resource`)-[:`ns0__clinicaltrials_vocabulary:count`]->(count_node) RETURN resource.uri AS resource_uri, count_node.uri AS count_node_id UNION ALL MATCH (resource:`ns0__clinicaltrials_vocabulary:Resource`) UNWIND resource.`ns0__clinicaltrials_vocabulary:count` AS count_node_id RETURN resource.uri AS resource_uri, count_node_id;
